ORG 0x20
M_START: WORD 0x6c4
M_SIZE: WORD 24
START_IDX: WORD 1
RESULT_ADDR: WORD 0x400
RES_L: WORD ?
RES_H: WORD ?
TEMP_L: WORD ?
TEMP_H: WORD ?
MASK_SIGN: WORD 0x80 ; 0000 0000 1000 0000 0000 0000 0000 0000
MASK_POS: WORD 0x7F ; 0000 0000 0111 1111
MASK_NEG: WORD 0xFF00 ; 1111 1111 0000 0000
START: CLA
    LD (M_START)+ ; считываем всегда 24-битный элемент
    ST TEMP_L
    LD (M_START)+
    ST TEMP_H
    LD START_IDX
    ROR
    BCC CHET
    AND MASK_SIGN
    BNE IF_NEG
IF_POS:
    LD TEMP_H
    AND MASK_POS
    ST TEMP_H
    JUMP NECHET
IF_NEG:
    LD TEMP_H
    OR MASK_NEG
    ST TEMP_H
    JUMP NECHET


NECHET:
    LD RES_L
    ADD TEMP_L
    ST RES_L
    CLA
    ADC TEMP_H
    ADD RES_H
    ST RES_H
    LD START_IDX
    INC
    ST START_IDX
    LOOP M_SIZE
    JUMP START
    JUMP FINISH
    
CHET:
    LD START_IDX
    INC
    ST START_IDX
    LOOP M_SIZE
    JUMP START
    JUMP FINISH

FINISH: 
    LD RES_L
    ST (RESULT_ADDR)+
    LD RES_H
    ST (RESULT_ADDR)+
    HLT
ORG 0x6c4
WORD 0x2
WORD 0x2
WORD 0x2
WORD 0x2
WORD 0x2
WORD 0x2
WORD 0x2
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1
WORD 0x1